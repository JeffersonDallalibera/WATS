===============================================================================
WATS - INSTALA√á√ÉO NO AMBIENTE CORPORATIVO
===============================================================================
Data: 27/10/2025
Vers√£o: 1.0
Reposit√≥rio: https://github.com/JeffersonDallalibera/WATS.git

===============================================================================
üöÄ PASSO A PASSO PARA INSTALA√á√ÉO NA EMPRESA
===============================================================================

PR√â-REQUISITOS:
- Python 3.8+ instalado
- Git configurado e acess√≠vel
- Acesso ao SQL Server
- PowerShell com permiss√µes adequadas

===============================================================================
1. CLONAR REPOSIT√ìRIO
===============================================================================

# Navegar para pasta desejada (ex: C:\)
cd C:\

# Clonar o reposit√≥rio WATS
git clone https://github.com/JeffersonDallalibera/WATS.git

# Entrar na pasta do projeto
cd WATS

===============================================================================
2. CONFIGURAR AMBIENTE PYTHON
===============================================================================

# Criar ambiente virtual
python -m venv venv

# Ativar ambiente virtual
.\venv\Scripts\Activate.ps1

# Se der erro de pol√≠tica de execu√ß√£o, usar:
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser

# Atualizar pip
python -m pip install --upgrade pip

===============================================================================
3. INSTALAR DEPEND√äNCIAS
===============================================================================

# Instalar todas as depend√™ncias do projeto
pip install -r requirements.txt

# Se houver problemas de proxy corporativo, usar:
pip install --proxy http://proxy.empresa.com:8080 -r requirements.txt

# Se houver problemas de SSL, usar:
pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r requirements.txt

# Verificar se tudo foi instalado corretamente
pip list

===============================================================================
4. CONFIGURAR O SISTEMA
===============================================================================

# Copiar arquivo de configura√ß√£o modelo
copy config\.env.example .env

# Editar configura√ß√µes (substituir pelos dados da empresa)
notepad .env

CONFIGURA√á√ïES NECESS√ÅRIAS NO .env:
------------------------------------
DB_SERVER=servidor-sql-da-empresa
DB_DATABASE=WATS_DB
DB_USERNAME=seu-usuario-sql
DB_PASSWORD=sua-senha-sql
DB_DRIVER=ODBC Driver 17 for SQL Server

RECORDING_PATH=C:\WATS\Recordings
MAX_RECORDING_SIZE_GB=10
CLEANUP_OLDER_THAN_DAYS=30

API_ENDPOINT=https://api-da-empresa.com/upload
API_KEY=chave-api-se-necessario

===============================================================================
5. EXECUTAR O WATS
===============================================================================

# Com o ambiente virtual ativado, executar:
python run.py

# O sistema deve abrir a interface gr√°fica do WATS

===============================================================================
üìã COMANDOS R√ÅPIDOS PARA USO DI√ÅRIO
===============================================================================

INICIAR WATS:
cd C:\WATS
.\venv\Scripts\Activate.ps1
python run.py

ATUALIZAR PARA NOVA VERS√ÉO:
cd C:\WATS
git pull origin master
.\venv\Scripts\Activate.ps1
pip install -r requirements.txt --upgrade

VERIFICAR STATUS:
cd C:\WATS
.\venv\Scripts\Activate.ps1
python -c "import src.wats.config; print('WATS OK!')"

===============================================================================
üõ†Ô∏è SCRIPT DE INSTALA√á√ÉO AUTOMATIZADA
===============================================================================

Criar arquivo: install_wats_empresa.ps1

# === IN√çCIO DO SCRIPT ===
Write-Host "=== Instalando WATS no ambiente corporativo ===" -ForegroundColor Green

# Verificar Python
if (!(Get-Command python -ErrorAction SilentlyContinue)) {
    Write-Host "ERRO: Python n√£o encontrado!" -ForegroundColor Red
    exit 1
}

# Clonar reposit√≥rio
Write-Host "Clonando reposit√≥rio..." -ForegroundColor Yellow
git clone https://github.com/JeffersonDallalibera/WATS.git
cd WATS

# Criar ambiente virtual
Write-Host "Criando ambiente virtual..." -ForegroundColor Yellow
python -m venv venv
.\venv\Scripts\Activate.ps1

# Instalar depend√™ncias
Write-Host "Instalando depend√™ncias..." -ForegroundColor Yellow
python -m pip install --upgrade pip
pip install -r requirements.txt

# Configurar .env
Write-Host "Configurando ambiente..." -ForegroundColor Yellow
if (!(Test-Path ".env")) {
    copy config\.env.example .env
    Write-Host "Configure o arquivo .env!" -ForegroundColor Cyan
}

Write-Host "=== Instala√ß√£o conclu√≠da! ===" -ForegroundColor Green
Write-Host "Execute: python run.py" -ForegroundColor Cyan
# === FIM DO SCRIPT ===

===============================================================================
üö® SOLU√á√ÉO DE PROBLEMAS COMUNS
===============================================================================

ERRO: "cannot be loaded because running scripts is disabled"
SOLU√á√ÉO: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser

ERRO: SSL certificate verify failed
SOLU√á√ÉO: Usar --trusted-host nos comandos pip

ERRO: Proxy blocking downloads
SOLU√á√ÉO: Configurar proxy no pip ou usar rede sem proxy

ERRO: "Module not found"
SOLU√á√ÉO: Verificar se ambiente virtual est√° ativado (.\venv\Scripts\Activate.ps1)

ERRO: Database connection failed
SOLU√á√ÉO: Verificar configura√ß√µes no arquivo .env

ERRO: Permission denied
SOLU√á√ÉO: Executar PowerShell como Administrador

===============================================================================
‚úÖ VANTAGENS DESTA INSTALA√á√ÉO
===============================================================================

üîπ Sem conflitos com antiv√≠rus (c√≥digo fonte)
üîπ Sempre atualizado via Git
üîπ Configura√ß√£o flex√≠vel via .env
üîπ Logs detalhados para debug
üîπ F√°cil manuten√ß√£o e atualiza√ß√µes
üîπ Acesso a todos os recursos do WATS

===============================================================================
üìû SUPORTE
===============================================================================

Em caso de problemas:
1. Verificar logs em wats_app.log
2. Testar conex√£o de rede
3. Validar configura√ß√µes do .env
4. Verificar permiss√µes de pasta

Desenvolvedor: Jefferson Dallalibera
Email: jefferson@empresa.com
Reposit√≥rio: https://github.com/JeffersonDallalibera/WATS

===============================================================================
üéØ CHECKLIST FINAL
===============================================================================

‚òê Python 3.8+ instalado
‚òê Git configurado
‚òê Reposit√≥rio clonado
‚òê Ambiente virtual criado
‚òê Depend√™ncias instaladas
‚òê Arquivo .env configurado
‚òê Conex√£o SQL testada
‚òê WATS executando (python run.py)
‚òê Interface gr√°fica funcionando

===============================================================================

OBSERVA√á√ïES IMPORTANTES:
- Manter ambiente virtual sempre ativado ao usar WATS
- Fazer backup das configura√ß√µes .env
- Atualizar regularmente via git pull
- Monitorar logs para troubleshooting
- Executar como Admin se necess√°rio

===============================================================================