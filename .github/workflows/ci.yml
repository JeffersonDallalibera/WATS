name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Lint with flake8
        run: |
          flake8 src/ tests/ scripts/

      - name: Check code formatting with black
        run: |
          black --check src/ tests/ scripts/

      - name: Check import sorting with isort
        run: |
          isort --check-only src/ tests/ scripts/

      - name: Type check with mypy
        run: |
          mypy src/

      - name: Security check with bandit
        run: |
          bandit -r src/ -x tests/

      - name: Test with pytest
        run: |
          pytest tests/ -v --cov=src/wats --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          cd scripts
          pyinstaller build_executable.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: wats-executable
          path: scripts/dist/
          retention-days: 30
